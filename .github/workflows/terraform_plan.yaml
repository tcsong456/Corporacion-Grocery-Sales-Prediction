name: Terraform-Plan
on:
  pull_request:

concurrency:
  group: tf-apply-${{ github.repository }}
  cancel-in-progress: true

env:
  GCP_PROJECT: corporacion-sales-forecasting
  GCP_REGION: europe-west1
  GCP_UMSA: "corpor-sales-sa"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      infra: ${{ steps.changes.outputs.infra }}
    steps:
      - uses: actions/checkout@v4
      - id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            infra:
              - 'terraform/**'
  
  tf-plan:
    needs: detect-changes
    if: needs.detect-changes.outputs.infra == 'true'
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: "true"
      TF_VAR_credential_key_json: ${{ secrets.GCP_KEY_JSON }}
    steps:
      - name: Checkout the current repo
        uses: actions/checkout@v4
        
      - name: Authentication to google cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_KEY_JSON }}
        
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        env:
          project_id: ${{ env.GCP_PROJECT }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.2
      
      - name: Terraform fmt
        working-directory: terraform
        run: terraform fmt -check -recursive
      
      - name: Ensure backend bucket exists
        run: |
          if ! gsutil ls -b gs://${backend_bucket} &>/dev/null; then
            echo "creating bucket ${backend_bucket}"
            gsutil mb -p ${PROJECT_ID} -l ${GCP_REGION} gs://${backend_bucket}
            gsutil uniformbucketlevelaccess set on gs://${backend_bucket}
          else
            echo "gs://${backend_bucket} already exists"
          fi
          gsutil versioning set on gs://${backend_bucket}
          gcloud storage buckets add-iam-policy-binding gs://$backend_bucket \
            --member="serviceAccount:$UMSA@$PROJECT_ID.iam.gserviceaccount.com" \
            --role="roles/storage.objectAdmin"
          gcloud storage buckets add-iam-policy-binding gs://$backend_bucket \
            --member="serviceAccount:$UMSA@$PROJECT_ID.iam.gserviceaccount.com" \
            --role="roles/storage.objectViewer"
      
      - name: Terraform init
        working-directory: terraform
        run: terraform init -input=false
      
      - name: Terraform validate
        working-directory: terraform
        run: terraform validate -no-color
      
      - name: TFLint
        uses: terraform-linters/setup-tflint@v4
      - name: Run tflint
        working-directory: terraform
        run: |
          tflint --init
          tflint --recursive
      
      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: terraform
          soft_fail: false
      
      - name: Terrafrom plan
        working-directory: terraform
        env:
          TF_VAR_project_id: ${{ env.GCP_PROJECT }}
          TF_VAR_region: ${{ env.GCP_REGION }}
          TF_VAR_umsa: ${{ env.GCP_UMSA }}
          TF_VAR_build_id: ${{ github.run_id }}-${{ github.sha }}
        run: terraform plan -no-color -out=tfplan.bin
      
      - name: Summary
        run: |
          echo "${{ github.event.pull_request.head.sha || github.sha }}"
          echo "${{ github.run_id }}"
      
      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.event.pull_request.head.sha || github.sha }}
          path: terraform
      