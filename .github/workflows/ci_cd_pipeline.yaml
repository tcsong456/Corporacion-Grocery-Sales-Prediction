name: Corpor-sales-CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      
      - name: Install deps
        run: |
          pip install -r requirements.txt
    
      - name: Flake8 linting test
        run: |
          flake8 tests/
          
  unit-test:
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build pytest image
        uses: docker/build-push-actions@v6
        with:
          context: .
          file: dockerfiles/pytest_dockerfile
          tags: pytest-unit-test:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Check for GCP key
        run: |
          if [ -z "${{ secrets.GCP_KEY_JSON }}" ];then
            echo "no GCP key is saved on github as secret keys,please download the GCP key and save it as github secret first"
            exit 1
          fi
      - name: Write GCP SA key
        if: ${{ secrets.GCP_KEY_JSON != '' }}
        run: echo "${{ secrets.GCP_KEY_JSON }}" > key.json
      - name: Run pytest unit-test in a container
        run: |
          set -e
          docker run --rm -v ${{ github.workspace }}:/app \
          -e GOOGLE_APPLICATION_CREDENTIALS=/run/secrets/key.json \
          $([ -f key.json ] && echo '--mount type=bind,src=${{ github.workspace }}/key.json,dst=/run/secrets/key.json') \
          pytest-unit-test:latest \
      
      - name: Upload Jnit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-python
          path: junit-python.xml
          
          